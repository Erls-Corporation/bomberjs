  testing
    tests are run through a browser. Make requests: specify a url, request headers,
      method and say the status code you want back, any headers, and then you can
      run assertions against the result.  Can run them all or specific ones.

  static files
    built in view that can serve static files.  can specify this view in routes.
      would be great if it stores on the server the files it has served and their
      mtime and th

  routing
    make it so you can return the name of an app to use its router for the rest of
      the url in order to do that, we need to pass around the currently parsed params
    make it so format is appended to the url with a . (if you want).
      And so that you can specify your default supported formats.

  bomber.js can take commands:
    startServer
    createApp
    REPL

  responses
    set cookies
    set sessions

  HTTPStatus objects
    5xx errors
    4xx errors
    3xx redirects

  logging for the server, preferably something that matches the simpler parts of the log4j library
